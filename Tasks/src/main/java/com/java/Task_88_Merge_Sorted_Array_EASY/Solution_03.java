package com.java.Task_88_Merge_Sorted_Array_EASY;

import java.util.Arrays;
/**
 * Подход 3: Использование встроенных методов Java
 * Можно воспользоваться методами стандартной библиотеки Java, такими как System.arraycopy() и Arrays.sort(),
 * чтобы упростить решение.
 * Однако этот способ может быть менее эффективным, поскольку сортировка сама по себе имеет сложность O((m+n)log(m+n)),
 * что говорит о том, что время выполнения алгоритма растет логарифмически относительно суммы длин двух массивов
 * (или других структур данных), обозначенных как m и n.
 * Эта сложность часто встречается в алгоритмах сортировки, таких как быстрая сортировка (QuickSort) или сортировка слиянием (Merge Sort).
 * Таким образом, эта сложность показывает, что выполнение алгоритма занимает больше времени,
 * чем просто последовательная обработка всех элементов, но меньше, чем квадратичное время.
 */
class Solution_03 {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        // Копируем элементы из nums2 в конец nums1
        System.arraycopy(nums2, 0, nums1, m, n);

        // Сортируем весь массив nums1
        Arrays.sort(nums1);
    }
}